CREATE DATABASE IF NOT EXISTS MONITORING;
USE MONITORING;

DELIMITER $$
DROP PROCEDURE IF EXISTS `create_index_if_not_exists`$$

CREATE DEFINER=`user`@`%` PROCEDURE `create_index_if_not_exists`(table_name_vc varchar(50), index_name_vc varchar(50), field_list_vc varchar(200))
  SQL SECURITY INVOKER
  BEGIN

    set @Index_cnt = (
      select	count(1) cnt
      FROM	INFORMATION_SCHEMA.STATISTICS
      WHERE	table_name = table_name_vc
             and	index_name = index_name_vc
    );

    IF ifnull(@Index_cnt,0) = 0 THEN set @index_sql = concat('Alter table ',table_name_vc,' ADD INDEX ',index_name_vc,'(',field_list_vc,');');

      PREPARE stmt FROM @index_sql;
      EXECUTE stmt;

      DEALLOCATE PREPARE stmt;

    END IF;

  END$$
DELIMITER ;

CREATE TABLE IF NOT EXISTS SYSTEM (
  SYSTEM_ID CHAR(36) PRIMARY KEY
);

CREATE TABLE IF NOT EXISTS SYSTEM_PROPERTY (
  SYSTEM_ID CHAR(36) NOT NULL,
  NAME VARCHAR(256) NOT NULL,
  VALUE VARCHAR(4096),
  FOREIGN KEY (SYSTEM_ID) REFERENCES SYSTEM(SYSTEM_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS EVENT_TYPE (
  EVENT_TYPE_ID SMALLINT AUTO_INCREMENT PRIMARY KEY,
  EVENT_NAME VARCHAR(256) NOT NULL
);

ALTER TABLE EVENT_TYPE ADD CONSTRAINT UNIQUE_EVENT_NAME UNIQUE (EVENT_NAME);

CREATE TABLE IF NOT EXISTS EVENT (
  EVENT_ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  EVENT_TYPE_ID SMALLINT NOT NULL,
  SYSTEM_ID CHAR(36) NOT NULL,
  TIME BIGINT NOT NULL,
  FOREIGN KEY (SYSTEM_ID) REFERENCES SYSTEM(SYSTEM_ID) ON DELETE CASCADE
);

call create_index_if_not_exists('EVENT','EVENT_TIME','EVENT_ID,TIME,SYSTEM_ID');

CREATE TABLE IF NOT EXISTS EVENT_PROPERTY (
  EVENT_ID BIGINT NOT NULL,
  NAME VARCHAR(256) NOT NULL,
  VALUE VARCHAR(4096),
  REALVALUE REAL,
  FOREIGN KEY (EVENT_ID) REFERENCES EVENT(EVENT_ID) ON DELETE CASCADE
);

CALL create_index_if_not_exists('EVENT_PROPERTY','EVENT_PROPERTY_STRING_VALUE','NAME,VALUE');

CALL create_index_if_not_exists('EVENT_PROPERTY','EVENT_PROPERTY_REAL_VALUE','NAME,REALVALUE');

CREATE TABLE IF NOT EXISTS COUNTER (
  COUNTER_ID SMALLINT AUTO_INCREMENT PRIMARY KEY,
  COUNTER_NAME VARCHAR(256) NOT NULL
);

ALTER TABLE COUNTER ADD CONSTRAINT UNIQUE_COUNTER_NAME UNIQUE (COUNTER_NAME);

CREATE TABLE IF NOT EXISTS COUNTER_VALUE (
  COUNTER_ID SMALLINT NOT NULL,
  SYSTEM_ID CHAR(36) NOT NULL,
  TIME BIGINT NOT NULL,
  INCREMENT_VALUE INTEGER NOT NULL DEFAULT 1,
  FOREIGN KEY (SYSTEM_ID) REFERENCES SYSTEM(SYSTEM_ID) ON DELETE CASCADE,
  FOREIGN KEY (COUNTER_ID) REFERENCES COUNTER(COUNTER_ID) ON DELETE RESTRICT
);

CALL create_index_if_not_exists('COUNTER_VALUE','COUNTER_TIME','COUNTER_ID,TIME,SYSTEM_ID');

CREATE TABLE IF NOT EXISTS METRIC (
  METRIC_ID SMALLINT AUTO_INCREMENT PRIMARY KEY,
  METRIC_NAME VARCHAR(256) NOT NULL
);

ALTER TABLE METRIC ADD CONSTRAINT UNIQUE_METRIC_NAME UNIQUE (METRIC_NAME);

CREATE TABLE IF NOT EXISTS METRIC_VALUE (
  METRIC_ID SMALLINT NOT NULL,
  SYSTEM_ID CHAR(36) NOT NULL,
  TIME BIGINT NOT NULL,
  METRIC_VALUE REAL NOT NULL,
  FOREIGN KEY (SYSTEM_ID) REFERENCES SYSTEM(SYSTEM_ID) ON DELETE CASCADE,
  FOREIGN KEY (METRIC_ID) REFERENCES METRIC(METRIC_ID) ON DELETE RESTRICT
);

CALL create_index_if_not_exists('METRIC_VALUE','METRIC_TIME','METRIC_ID,TIME,SYSTEM_ID');