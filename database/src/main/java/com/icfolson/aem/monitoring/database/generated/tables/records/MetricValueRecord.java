/**
 * This class is generated by jOOQ
 */
package com.icfolson.aem.monitoring.database.generated.tables.records;


import com.icfolson.aem.monitoring.database.generated.tables.MetricValue;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetricValueRecord extends UpdatableRecordImpl<MetricValueRecord> implements Record5<Long, UUID, String, Long, Float> {

    private static final long serialVersionUID = -1289668344;

    /**
     * Setter for <code>MONITORING.METRIC_VALUE.COUNTER_VALUE_ID</code>.
     */
    public void setCounterValueId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>MONITORING.METRIC_VALUE.COUNTER_VALUE_ID</code>.
     */
    public Long getCounterValueId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MONITORING.METRIC_VALUE.SYSTEM_ID</code>.
     */
    public void setSystemId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>MONITORING.METRIC_VALUE.SYSTEM_ID</code>.
     */
    public UUID getSystemId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>MONITORING.METRIC_VALUE.METRIC_NAME</code>.
     */
    public void setMetricName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>MONITORING.METRIC_VALUE.METRIC_NAME</code>.
     */
    public String getMetricName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>MONITORING.METRIC_VALUE.TIME</code>.
     */
    public void setTime(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>MONITORING.METRIC_VALUE.TIME</code>.
     */
    public Long getTime() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>MONITORING.METRIC_VALUE.METRIC_VALUE</code>.
     */
    public void setMetricValue(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>MONITORING.METRIC_VALUE.METRIC_VALUE</code>.
     */
    public Float getMetricValue() {
        return (Float) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, UUID, String, Long, Float> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, UUID, String, Long, Float> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return MetricValue.METRIC_VALUE.COUNTER_VALUE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return MetricValue.METRIC_VALUE.SYSTEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MetricValue.METRIC_VALUE.METRIC_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return MetricValue.METRIC_VALUE.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float> field5() {
        return MetricValue.METRIC_VALUE.METRIC_VALUE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getCounterValueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getSystemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMetricName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float value5() {
        return getMetricValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricValueRecord value1(Long value) {
        setCounterValueId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricValueRecord value2(UUID value) {
        setSystemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricValueRecord value3(String value) {
        setMetricName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricValueRecord value4(Long value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricValueRecord value5(Float value) {
        setMetricValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricValueRecord values(Long value1, UUID value2, String value3, Long value4, Float value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MetricValueRecord
     */
    public MetricValueRecord() {
        super(MetricValue.METRIC_VALUE);
    }

    /**
     * Create a detached, initialised MetricValueRecord
     */
    public MetricValueRecord(Long counterValueId, UUID systemId, String metricName, Long time, Float metricValue) {
        super(MetricValue.METRIC_VALUE);

        set(0, counterValueId);
        set(1, systemId);
        set(2, metricName);
        set(3, time);
        set(4, metricValue);
    }
}
