/**
 * This class is generated by jOOQ
 */
package com.icfolson.aem.monitoring.database.generated.tables;


import com.icfolson.aem.monitoring.database.generated.Keys;
import com.icfolson.aem.monitoring.database.generated.Monitoring;
import com.icfolson.aem.monitoring.database.generated.tables.records.SystemPropertyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemProperty extends TableImpl<SystemPropertyRecord> {

    private static final long serialVersionUID = 454934190;

    /**
     * The reference instance of <code>MONITORING.SYSTEM_PROPERTY</code>
     */
    public static final SystemProperty SYSTEM_PROPERTY = new SystemProperty();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SystemPropertyRecord> getRecordType() {
        return SystemPropertyRecord.class;
    }

    /**
     * The column <code>MONITORING.SYSTEM_PROPERTY.SYSTEM_ID</code>.
     */
    public final TableField<SystemPropertyRecord, Short> SYSTEM_ID = createField("SYSTEM_ID", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>MONITORING.SYSTEM_PROPERTY.NAME</code>.
     */
    public final TableField<SystemPropertyRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(256).nullable(false), this, "");

    /**
     * The column <code>MONITORING.SYSTEM_PROPERTY.VALUE</code>.
     */
    public final TableField<SystemPropertyRecord, String> VALUE = createField("VALUE", org.jooq.impl.SQLDataType.VARCHAR.length(4096), this, "");

    /**
     * Create a <code>MONITORING.SYSTEM_PROPERTY</code> table reference
     */
    public SystemProperty() {
        this("SYSTEM_PROPERTY", null);
    }

    /**
     * Create an aliased <code>MONITORING.SYSTEM_PROPERTY</code> table reference
     */
    public SystemProperty(String alias) {
        this(alias, SYSTEM_PROPERTY);
    }

    private SystemProperty(String alias, Table<SystemPropertyRecord> aliased) {
        this(alias, aliased, null);
    }

    private SystemProperty(String alias, Table<SystemPropertyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Monitoring.MONITORING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SystemPropertyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SystemPropertyRecord, ?>>asList(Keys.CONSTRAINT_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemProperty as(String alias) {
        return new SystemProperty(alias, this);
    }

    /**
     * Rename this table
     */
    public SystemProperty rename(String name) {
        return new SystemProperty(name, null);
    }
}
