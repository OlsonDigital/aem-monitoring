/**
 * This class is generated by jOOQ
 */
package com.icfolson.aem.monitoring.database.generated.tables.records;


import com.icfolson.aem.monitoring.database.generated.tables.Event;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record4<Long, UUID, String, Long> {

    private static final long serialVersionUID = 835954615;

    /**
     * Setter for <code>MONITORING.EVENT.EVENT_ID</code>.
     */
    public void setEventId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>MONITORING.EVENT.EVENT_ID</code>.
     */
    public Long getEventId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>MONITORING.EVENT.SYSTEM_ID</code>.
     */
    public void setSystemId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>MONITORING.EVENT.SYSTEM_ID</code>.
     */
    public UUID getSystemId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>MONITORING.EVENT.TYPE</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>MONITORING.EVENT.TYPE</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>MONITORING.EVENT.TIME</code>.
     */
    public void setTime(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>MONITORING.EVENT.TIME</code>.
     */
    public Long getTime() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, UUID, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, UUID, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Event.EVENT.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return Event.EVENT.SYSTEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Event.EVENT.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Event.EVENT.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getSystemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value1(Long value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value2(UUID value) {
        setSystemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value3(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord value4(Long value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventRecord values(Long value1, UUID value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Long eventId, UUID systemId, String type, Long time) {
        super(Event.EVENT);

        set(0, eventId);
        set(1, systemId);
        set(2, type);
        set(3, time);
    }
}
