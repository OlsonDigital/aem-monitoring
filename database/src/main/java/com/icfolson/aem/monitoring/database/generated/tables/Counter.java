/**
 * This class is generated by jOOQ
 */
package com.icfolson.aem.monitoring.database.generated.tables;


import com.icfolson.aem.monitoring.database.generated.Keys;
import com.icfolson.aem.monitoring.database.generated.Monitoring;
import com.icfolson.aem.monitoring.database.generated.tables.records.CounterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Counter extends TableImpl<CounterRecord> {

    private static final long serialVersionUID = -2129636753;

    /**
     * The reference instance of <code>MONITORING.COUNTER</code>
     */
    public static final Counter COUNTER = new Counter();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CounterRecord> getRecordType() {
        return CounterRecord.class;
    }

    /**
     * The column <code>MONITORING.COUNTER.COUNTER_ID</code>.
     */
    public final TableField<CounterRecord, Long> COUNTER_ID = createField("COUNTER_ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("(NEXT VALUE FOR MONITORING.SYSTEM_SEQUENCE_7CA45243_ED25_439D_B8A8_61048174A2B8)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>MONITORING.COUNTER.PARENT_COUNTER_ID</code>.
     */
    public final TableField<CounterRecord, Long> PARENT_COUNTER_ID = createField("PARENT_COUNTER_ID", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MONITORING.COUNTER.COUNTER_NAME</code>.
     */
    public final TableField<CounterRecord, String> COUNTER_NAME = createField("COUNTER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * Create a <code>MONITORING.COUNTER</code> table reference
     */
    public Counter() {
        this("COUNTER", null);
    }

    /**
     * Create an aliased <code>MONITORING.COUNTER</code> table reference
     */
    public Counter(String alias) {
        this(alias, COUNTER);
    }

    private Counter(String alias, Table<CounterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Counter(String alias, Table<CounterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Monitoring.MONITORING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CounterRecord, Long> getIdentity() {
        return Keys.IDENTITY_COUNTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CounterRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_6;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CounterRecord>> getKeys() {
        return Arrays.<UniqueKey<CounterRecord>>asList(Keys.CONSTRAINT_6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Counter as(String alias) {
        return new Counter(alias, this);
    }

    /**
     * Rename this table
     */
    public Counter rename(String name) {
        return new Counter(name, null);
    }
}
