// automatically generated by the FlatBuffers compiler, do not modify

package com.icfolson.aem.monitoring.serialization.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class MetricValue extends Table {
  public static MetricValue getRootAsMetricValue(ByteBuffer _bb) { return getRootAsMetricValue(_bb, new MetricValue()); }
  public static MetricValue getRootAsMetricValue(ByteBuffer _bb, MetricValue obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public MetricValue __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long timestamp() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }
  public short nameOffset() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public float value() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createMetricValue(FlatBufferBuilder builder,
      long timestamp,
      short nameOffset,
      float value) {
    builder.startObject(3);
    MetricValue.addTimestamp(builder, timestamp);
    MetricValue.addValue(builder, value);
    MetricValue.addNameOffset(builder, nameOffset);
    return MetricValue.endMetricValue(builder);
  }

  public static void startMetricValue(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(0, timestamp, 0); }
  public static void addNameOffset(FlatBufferBuilder builder, short nameOffset) { builder.addShort(1, nameOffset, 0); }
  public static void addValue(FlatBufferBuilder builder, float value) { builder.addFloat(2, value, 0.0f); }
  public static int endMetricValue(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

